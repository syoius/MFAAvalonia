<suki:SukiWindow
    BackgroundAnimationEnabled="{Binding BackgroundAnimations, Source={x:Static helper:Instances.GuiSettingsUserControlModel}}"
    BackgroundStyle="{Binding BackgroundStyle, Source={x:Static helper:Instances.GuiSettingsUserControlModel}}"
    BackgroundTransitionsEnabled="{Binding BackgroundTransitions, Source={x:Static helper:Instances.GuiSettingsUserControlModel}}"
    IsVisible="{Binding IsWindowVisible}"
    MinHeight="360"
    MinWidth="650"
    d:DesignHeight="450"
    d:DesignWidth="800" ShowTitle="False"
    mc:Ignorable="d"
    x:Class="MFAAvalonia.Views.Windows.RootView"
    x:DataType="windows:RootViewModel" WindowStartupLocation="CenterScreen"
    xmlns="https://github.com/avaloniaui"
    xmlns:avalonia="https://github.com/projektanker/icons.avalonia"
    xmlns:calcBinding="clr-namespace:CalcBinding;assembly=CalcBindingAva"
    xmlns:converters="clr-namespace:MFAAvalonia.Helper.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="clr-namespace:MFAAvalonia.Extensions"
    xmlns:fluent="clr-namespace:FluentIcons.Avalonia.Fluent;assembly=FluentIcons.Avalonia.Fluent"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:helper="clr-namespace:MFAAvalonia.Helper"
    xmlns:markup="https://codewf.com"
    xmlns:markupExtensions="clr-namespace:FluentIcons.Avalonia.Fluent.MarkupExtensions;assembly=FluentIcons.Avalonia.Fluent"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:pages="clr-namespace:MFAAvalonia.Views.Pages"
    xmlns:suki="https://github.com/kikipoulet/SukiUI"
    xmlns:userControls="clr-namespace:MFAAvalonia.Views.UserControls"
    xmlns:vm="using:MFAAvalonia.ViewModels"
    xmlns:windows="clr-namespace:MFAAvalonia.ViewModels.Windows"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <suki:SukiWindow.Styles>
        <Style Selector="ToggleButton.SP:checked > PathIcon">
            <Setter Property="Foreground" Value="{DynamicResource SukiPrimaryColor}" />
        </Style>
    </suki:SukiWindow.Styles>
    <suki:SukiWindow.NonClientAreaContent>
        <StackPanel Orientation="Horizontal" Spacing="5">
            <TextBlock VerticalAlignment="Center" IsVisible="{Binding IsDebugMode}"
                       FontSize="13" Text="{markup:I18n {x:Static helper:LangKeys.DebugMode}}"
                       Foreground="{DynamicResource SukiPrimaryColor}"
                       FontWeight="Bold">
            </TextBlock>
            <TextBlock VerticalAlignment="Center"
                       FontSize="13"
                       FontWeight="Bold">
                <TextBlock.Text>
                    <MultiBinding Converter="{converters:TitleConverter}" Mode="OneWay">
                        <Binding Path="CustomTitle" />
                        <Binding Path="IsCustomTitleVisible" />
                        <markup:I18nBinding>
                            <x:Arguments>
                                <x:Static Member="helper:LangKeys.AppTitle" />
                            </x:Arguments>
                        </markup:I18nBinding>
                        <Binding Path="Version" />
                        <Binding Path="ResourceName" />
                        <Binding Path="ResourceVersion" />
                        <Binding Path="IsResourceNameVisible" />
                        <Binding Path="CurrentConfiguration" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </StackPanel>
    </suki:SukiWindow.NonClientAreaContent>
    <suki:SukiWindow.Title>
        <MultiBinding Converter="{converters:TitleConverter}" Mode="OneWay">
            <Binding Path="CustomTitle" />
            <Binding Path="IsCustomTitleVisible" />
            <markup:I18nBinding>
                <x:Arguments>
                    <x:Static Member="helper:LangKeys.AppTitle" />
                </x:Arguments>
            </markup:I18nBinding>
            <Binding Path="Version" />
            <Binding Path="ResourceName" />
            <Binding Path="ResourceVersion" />
            <Binding Path="IsResourceNameVisible" />
            <Binding Path="CurrentConfiguration" />
        </MultiBinding>
    </suki:SukiWindow.Title>
    <suki:SukiWindow.RightWindowTitleBarControls>
        <ToggleButton
            Classes="SP Basic Round"
            IsChecked="{Binding Topmost,RelativeSource={RelativeSource AncestorType={x:Type suki:SukiWindow}}, Mode=TwoWay}"
            x:Name="btnPin">
            <ToggleButton.RenderTransform>
                <TranslateTransform X="-5" />
            </ToggleButton.RenderTransform>
            <PathIcon Data="{x:Static suki:Icons.Pin}" Width="16" Height="16"></PathIcon>
            <!-- <fluent:FluentIcon Icon="Pin" IconSize="Size16"></fluent:FluentIcon> -->
        </ToggleButton>
    </suki:SukiWindow.RightWindowTitleBarControls>
    <suki:SukiWindow.LogoContent>
        <Image
            Height="18"
            Source="{x:Static helper:IconHelper.Icon}"
            Stretch="Uniform"
            Width="18" />

    </suki:SukiWindow.LogoContent>
    <Design.DataContext>
        <windows:RootViewModel />
    </Design.DataContext>
    <suki:SukiWindow.Hosts>
        <suki:SukiToastHost Manager="{x:Static helper:Instances.ToastManager}" />
        <suki:SukiDialogHost Manager="{x:Static helper:Instances.DialogManager}" Name="DialogHost" />
    </suki:SukiWindow.Hosts>
    <Grid>
        <suki:SukiSideMenu IsMenuExpanded="False" IsSearchEnabled="False" OpenPaneLength="150">
            <!-- <suki:SukiSideMenu.Styles> -->
            <!--     <Style Selector="Image.AppIcon"> -->
            <!--         <Setter Property="Transitions"> -->
            <!--             <Transitions> -->
            <!--                 <DoubleTransition Duration="0.1" Property="Opacity" /> -->
            <!--             </Transitions> -->
            <!--         </Setter> -->
            <!--         <Style Selector="^:pointerover"> -->
            <!--             <Setter Property="Opacity" Value="0.5" /> -->
            <!--         </Style> -->
            <!--     </Style> -->
            <!-- </suki:SukiSideMenu.Styles> -->
            <suki:SukiSideMenu.Items>
                <suki:SukiSideMenuItem IsContentMovable="False"
                                       Header="{markup:I18n {x:Static helper:LangKeys.Home}}"
                                       Icon="{markupExtensions:FluentIcon Icon=TasksApp,
                                                       IconVariant=Regular}"
                                       PageContent="{extensions:ServiceProvider ServiceType={x:Type pages:TaskQueueView}}" />
                <suki:SukiSideMenuItem IsContentMovable="False"
                                       Header="{markup:I18n {x:Static helper:LangKeys.ResourceOption}}"
                                       Icon="{markupExtensions:FluentIcon Icon=Apps,
                                                       IconVariant=Regular}"
                                       IsVisible="False"
                                       PageContent="{extensions:ServiceProvider ServiceType={x:Type pages:ResourcesView}}" />
          
            </suki:SukiSideMenu.Items>

            <suki:SukiSideMenu.HeaderContent>
                <!--  Header Content  -->
            </suki:SukiSideMenu.HeaderContent>

            <suki:SukiSideMenu.FooterMenuItems>
                <suki:SukiSideMenuItem IsContentMovable="False"
                                       Header="{markup:I18n {x:Static helper:LangKeys.Settings}}"
                                       Icon="{markupExtensions:FluentIcon Icon=Settings,
                                                           IconVariant=Regular}"
                                       PageContent="{extensions:ServiceProvider ServiceType={x:Type pages:SettingsView}}" />
            </suki:SukiSideMenu.FooterMenuItems>
        </suki:SukiSideMenu>
    </Grid>

</suki:SukiWindow>
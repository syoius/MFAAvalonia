<UserControl
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d"
    x:Class="MFAAvalonia.Views.Pages.TaskQueueView"
    x:DataType="pages:TaskQueueViewModel"
    xmlns="https://github.com/avaloniaui"
    xmlns:System="clr-namespace:System;assembly=System.Runtime"
    xmlns:avaloniaEdit="https://github.com/avaloniaui/avaloniaedit"
    xmlns:binding="clr-namespace:MaaFramework.Binding;assembly=MaaFramework.Binding"
    xmlns:avalonia="https://github.com/projektanker/icons.avalonia"
    xmlns:calcBinding="clr-namespace:CalcBinding;assembly=CalcBindingAva"
    xmlns:controls="clr-namespace:SukiUI.Controls;assembly=SukiUI"
    xmlns:converters="clr-namespace:MFAAvalonia.Helper.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ex="clr-namespace:MFAAvalonia.Extensions"
    xmlns:fluent="clr-namespace:FluentIcons.Avalonia.Fluent;assembly=FluentIcons.Avalonia.Fluent"
    xmlns:helper="clr-namespace:MFAAvalonia.Helper"
    xmlns:maa="clr-namespace:MFAAvalonia.Extensions.MaaFW"
    xmlns:markup="https://codewf.com"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mdxaml="https://github.com/whistyun/Markdown.Avalonia"
    xmlns:pages="clr-namespace:MFAAvalonia.ViewModels.Pages"
    xmlns:suki="https://github.com/kikipoulet/SukiUI"
    xmlns:type="clr-namespace:MFAAvalonia.Helper.ValueType"
    xmlns:usersControls="clr-namespace:MFAAvalonia.ViewModels.UsersControls"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vm="using:MFAAvalonia.ViewModels"
    xmlns:ctxt="clr-namespace:ColorTextBlock.Avalonia;assembly=ColorTextBlock.Avalonia"
    xmlns:markupExtensions="clr-namespace:FluentIcons.Avalonia.Fluent.MarkupExtensions;assembly=FluentIcons.Avalonia.Fluent"
    xmlns:extensions="clr-namespace:SukiUI.Extensions;assembly=SukiUI"
    xmlns:behaviors="using:Avalonia.Xaml.Interactions.Core"
    xmlns:interaction="using:Avalonia.Xaml.Interactivity"
    xmlns:i="using:Avalonia.Xaml.Interactivity"
    xmlns:ia="using:Avalonia.Xaml.Interactions.Core">
    <Design.DataContext>
        <pages:TaskQueueViewModel />
    </Design.DataContext>

    <UserControl.Resources>
        <ContextMenu x:Key="TaskMenu">
            <MenuItem Click="Delete" Header="{markup:I18n {x:Static helper:LangKeys.Delete}}"  />
        </ContextMenu>
    </UserControl.Resources>
    <Grid ClipToBounds="False" Margin="0,0,0,0" x:Name="MainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding Column1Width, Source={x:Static helper:Instances.TaskQueueViewModel}}" MinWidth="200" />
            <ColumnDefinition Width="15" />
            <ColumnDefinition Width="{Binding Column2Width, Source={x:Static helper:Instances.TaskQueueViewModel}}" MinWidth="200" />
            <ColumnDefinition Width="15" />
            <ColumnDefinition Width="{Binding Column3Width, Source={x:Static helper:Instances.TaskQueueViewModel}}" MinWidth="200" />
        </Grid.ColumnDefinitions>
        
        <!-- 左侧列 -->
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MaxHeight="150" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <suki:GlassCard Grid.Row="0" Margin="15,15,0,5">
                <suki:GroupBox>
                    <suki:GroupBox.Header>
                        <TextBlock
                            FontSize="11"
                            FontWeight="Bold"
                            Foreground="{DynamicResource SukiLowText}"
                            HorizontalAlignment="Left"
                            Margin="2,0,0,0"
                            Text="{markup:I18n {x:Static helper:LangKeys.ResourceOption}}"
                            VerticalAlignment="Center" />
                    </suki:GroupBox.Header>
                    <ComboBox ex:ComboBoxExtensions.DisableNavigationOnLostFocus="True"
                              DisplayMemberBinding="{Binding Name}"
                              IsEnabled="{Binding Idle, Source={x:Static helper:Instances.RootViewModel}}"
                              ItemsSource="{Binding CurrentResources}"
                              Margin="10,0,10,0"
                              SelectedValue="{Binding CurrentResource}"
                              SelectedValueBinding="{Binding Name}"
                              VerticalAlignment="Center" />
                </suki:GroupBox>

            </suki:GlassCard>
            <Grid Grid.Row="1">
                <suki:GlassCard Grid.Column="0" Margin="15,5,0,25">
                    <suki:GroupBox>
                        <suki:GroupBox.Header>
                            <Grid Grid.Row="0">
                                <TextBlock
                                    FontSize="11"
                                    FontWeight="Bold"
                                    Foreground="{DynamicResource SukiLowText}"
                                    HorizontalAlignment="Left"
                                    Margin="2,0,0,0"
                                    Text="{markup:I18n {x:Static helper:LangKeys.TaskList}}"
                                    VerticalAlignment="Center" />
                                <StackPanel
                                    HorizontalAlignment="Right"
                                    Margin="2,0,2,0"
                                    Orientation="Horizontal"
                                    VerticalAlignment="Center">
                                    <Button
                                        Classes="Basic Round"
                                        Command="{Binding SelectAllCommand}"
                                        Height="16"
                                        IsEnabled="{Binding Idle, Source={x:Static helper:Instances.RootViewModel}}"
                                        Margin="7,0,0,0"
                                        Padding="0"
                                        
                                        ToolTip.Tip="{markup:I18n {x:Static helper:LangKeys.SelectAll}}"
                                        Width="16">
                                        <fluent:FluentIcon
                                            Icon="SelectAllOn"
                                            IconSize="Size16"
                                            IconVariant="Regular" />
                                    </Button>
                                    <Button
                                        Classes="Basic Round"
                                        Command="{Binding SelectNoneCommand}"
                                        Height="16"
                                        IsEnabled="{Binding Idle, Source={x:Static helper:Instances.RootViewModel}}"
                                        Margin="7,0,0,0"
                                        Padding="0"
                                        
                                        ToolTip.Tip="{markup:I18n {x:Static helper:LangKeys.DeselectAll}}"
                                        Width="16">
                                        <fluent:FluentIcon
                                            Icon="SelectAllOff"
                                            IconSize="Size16"
                                            IconVariant="Regular" />
                                    </Button>
                                    <Button
                                        Classes="Basic Round"
                                        Command="{Binding AddTaskCommand}"
                                        Height="16"
                                        IsEnabled="{Binding Idle, Source={x:Static helper:Instances.RootViewModel}}"
                                        Margin="7,0,8,0"
                                        Padding="0"
                                        
                                        ToolTip.Tip="{markup:I18n {x:Static helper:LangKeys.AddTask}}">
                                        <fluent:FluentIcon
                                            Icon="AddSquareMultiple"
                                            IconSize="Size16"
                                            IconVariant="Regular" />
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </suki:GroupBox.Header>
                        <Grid>
                            <ListBox
                                DragDrop.AllowDrop="{Binding Idle,Source={x:Static helper:Instances.RootViewModel}}"
                                ex:DragDropExtensions.EnableDragDrop="True"  ex:DragDropExtensions.EnableAnimation="True"
                                ItemsSource="{Binding Path=TaskItemViewModels}"
                                Margin="0,3,0,0"
                                MinHeight="220"
                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                SelectionChanged="SelectingItemsControl_OnSelectionChanged"
                                x:Name="TaskListBox">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid   
                                                ToolTip.Tip="{markup:I18n {x:Static helper:LangKeys.TooltipDragLabel}}"
                                                Background="Transparent"
                                                ColumnDefinitions="30,1*,Auto"
                                                ContextMenu="{StaticResource TaskMenu}"
                                                Tapped="Grid_Tapped"
                                                x:Name="ListGrid">
                                            <CheckBox
                                                Grid.Column="0"
                                                HorizontalAlignment="Left"
                                                IsEnabled="{Binding Idle,Source={x:Static helper:Instances.RootViewModel}}"
                                                IsChecked="{Binding IsCheckedWithNull}"
                                                Margin="0,0,0,0"
                                                Tapped="CheckBox_Tapped">
                                            </CheckBox>
                                            
                                            <TextBlock
                                                Grid.Column="1"
                                                Text="{Binding Name}"
                                                TextTrimming="CharacterEllipsis"
                                                TextWrapping="NoWrap"
                                                MinWidth="170"
                                                Margin="3,0,25,0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Tapped="TextBlock_Tapped" />

                                            <!--  ReSharper disable once Xaml.StaticResourceNotResolved  -->
                                            <RadioButton
                                                Background="Transparent"
                                                BorderThickness="0"
                                                Grid.Column="2"
                                                GroupName="TaskSettings"
                                                Width="25"
                                                HorizontalAlignment="Right"
                                                HorizontalContentAlignment="Left"
                                                IsChecked="{Binding EnableSetting}"
                                                IsVisible="False" />
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>


                        </Grid>
                    </suki:GroupBox>

                </suki:GlassCard>
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                    <StackPanel.Resources>
                        <markup:IfConditionConverter x:Key="StatusConditionConverter">
                            <markup:IfConditionConverter.True>
                                <TextBlock Text="{markup:I18n {x:Static helper:LangKeys.StopTask}}" />
                            </markup:IfConditionConverter.True>
                            <markup:IfConditionConverter.False>
                                <TextBlock Text="{markup:I18n {x:Static helper:LangKeys.StartTask}}" />
                            </markup:IfConditionConverter.False>
                        </markup:IfConditionConverter>
                    </StackPanel.Resources>
                    <Button
                        Classes="Flat Rounded"
                        Command="{Binding ToggleCommand}"
                        Content="{Binding IsRunning, Source={x:Static helper:Instances.RootViewModel}, Converter={StaticResource StatusConditionConverter}}"
                        FontWeight="DemiBold"
                        Height="40"
                        HorizontalAlignment="Center"
                        Margin="0,0,0,7"
                        VerticalAlignment="Bottom"
                        Width="160" />
                </StackPanel>
            </Grid>
        </Grid>
        
        <!-- 第一个分隔条 -->
        <GridSplitter Grid.Column="1" 
                      Background="Transparent"
                      Margin="0"
                      Width="15"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch" DragCompleted="GridSplitter_DragCompleted"
                      x:Name="Splitter1">
            <GridSplitter.Template>
                <ControlTemplate>
                    <Border Background="Transparent"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Cursor="SizeWestEast">
                        <StackPanel VerticalAlignment="Center" 
                                    HorizontalAlignment="Center" 
                                    Spacing="3">
                            <Ellipse Width="4" Height="4" Fill="{DynamicResource SukiControlBorderBrush}" />
                            <Ellipse Width="4" Height="4" Fill="{DynamicResource SukiControlBorderBrush}" />
                            <Ellipse Width="4" Height="4" Fill="{DynamicResource SukiControlBorderBrush}" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </GridSplitter.Template>
            <i:Interaction.Behaviors>
                <ia:EventTriggerBehavior EventName="DragStarted">
                    <ia:InvokeCommandAction Command="{Binding GridSplitterDragStartedCommand}" CommandParameter="Splitter1" />
                </ia:EventTriggerBehavior>
                <ia:EventTriggerBehavior EventName="DragCompleted">
                    <ia:InvokeCommandAction Command="{Binding GridSplitterDragCompletedCommand}" CommandParameter="Splitter1" />
                </ia:EventTriggerBehavior>
            </i:Interaction.Behaviors>
        </GridSplitter>
        
        <!-- 中间列 -->
        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*" MinHeight="100" />
                <RowDefinition Height="2*" MinHeight="100" />
            </Grid.RowDefinitions>
            <suki:GlassCard Grid.Row="0" Margin="0,15,0,5" x:Name="Row1">
                <suki:GroupBox>
                    <suki:GroupBox.Header>
                        <TextBlock
                            FontSize="11"
                            FontWeight="Bold"
                            Foreground="{DynamicResource SukiLowText}"
                            HorizontalAlignment="Left"
                            Margin="2,0,0,0"
                            Text="{markup:I18n {x:Static helper:LangKeys.TaskSettings}}"
                            VerticalAlignment="Center" />
                    </suki:GroupBox.Header>
                    <ScrollViewer
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        VerticalScrollBarVisibility="Auto">
                        <Grid x:Name="CommonOptionSettings" />
                    </ScrollViewer>
                </suki:GroupBox>
            </suki:GlassCard>
            <suki:GlassCard Grid.Row="1" Margin="0,8,0,25">
                <suki:GroupBox>
                    <suki:GroupBox.Header>
                        <TextBlock
                            FontSize="11"
                            FontWeight="Bold"
                            Foreground="{DynamicResource SukiLowText}"
                            HorizontalAlignment="Left"
                            Margin="2,0,0,0"
                            Text="{markup:I18n {x:Static helper:LangKeys.TaskDescription}}"
                            VerticalAlignment="Center" />
                    </suki:GroupBox.Header>

                    <!-- <avaloniaEdit:TextEditor -->
                    <!--     FontFamily="Cascadia Code,Consolas,Menlo,Monospace" -->
                    <!--     IsReadOnly="True" VerticalScrollBarVisibility="Auto" -->
                    <!--     x:Name="Introduction"> -->
                    <!-- </avaloniaEdit:TextEditor> -->
                    <ScrollViewer
                        HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto"
                        Padding="2,2,8,2"
                        Margin="0">
                        <mdxaml:MarkdownScrollViewer
                            Focusable="True" x:Name="Introduction"
                            Margin="10,0,10,0">
                            <mdxaml:MarkdownScrollViewer.Styles>
                                <StaticResource ResourceKey="MdXamlDocStyle" />
                            </mdxaml:MarkdownScrollViewer.Styles>
                            <mdxaml:MarkdownScrollViewer.Plugins>
                                <StaticResource ResourceKey="MdXamlPlugin" />
                            </mdxaml:MarkdownScrollViewer.Plugins>
                        </mdxaml:MarkdownScrollViewer>
                    </ScrollViewer>
                </suki:GroupBox>

            </suki:GlassCard>
        </Grid>
        
        <!-- 第二个分隔条 -->
        <GridSplitter Grid.Column="3" 
                      Background="Transparent" DragCompleted="GridSplitter_DragCompleted"
                      Margin="0"
                      Width="15"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      x:Name="Splitter2">
            <GridSplitter.Template>
                <ControlTemplate>
                    <Border Background="Transparent"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Cursor="SizeWestEast">
                        <StackPanel VerticalAlignment="Center" 
                                    HorizontalAlignment="Center" 
                                    Spacing="3">
                            <Ellipse Width="4" Height="4" Fill="{DynamicResource SukiControlBorderBrush}" />
                            <Ellipse Width="4" Height="4" Fill="{DynamicResource SukiControlBorderBrush}" />
                            <Ellipse Width="4" Height="4" Fill="{DynamicResource SukiControlBorderBrush}" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </GridSplitter.Template>
            <i:Interaction.Behaviors>
                <ia:EventTriggerBehavior EventName="DragStarted">
                    <ia:InvokeCommandAction Command="{Binding GridSplitterDragStartedCommand}" CommandParameter="Splitter2" />
                </ia:EventTriggerBehavior>
                <ia:EventTriggerBehavior EventName="DragCompleted">
                    <ia:InvokeCommandAction Command="{Binding GridSplitterDragCompletedCommand}" CommandParameter="Splitter2" />
                </ia:EventTriggerBehavior>
            </i:Interaction.Behaviors>
        </GridSplitter>
        
        <!-- 右侧列 -->
        <Grid Grid.Column="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MaxHeight="250" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <suki:GlassCard Grid.Row="0" Margin="0,15,15,8">
                <suki:GroupBox>
                    <suki:GroupBox.Header>
                        <Grid>
                            <TextBlock
                                FontSize="11"
                                FontWeight="Bold"
                                Foreground="{DynamicResource SukiLowText}"
                                HorizontalAlignment="Left"
                                Margin="2,0,0,0"
                                Text="{markup:I18n {x:Static helper:LangKeys.Connection}}"
                                VerticalAlignment="Center" />

                            <StackPanel
                                HorizontalAlignment="Right"
                                Orientation="Horizontal"
                                VerticalAlignment="Center">
                                <StackPanel.Resources>
                                    <markup:IfConditionConverter x:Key="ConnectedConditionConverter">
                                        <markup:IfConditionConverter.True>
                                            <Path
                                                Data="{StaticResource ConnectedGeometry}"
                                                Fill="LimeGreen"
                                                Height="11"
                                                Margin="3,2,4,0"
                                                Stretch="Uniform"
                                                
                                                ToolTip.Tip="{markup:I18n {x:Static helper:LangKeys.Connected}}" />
                                        </markup:IfConditionConverter.True>
                                        <markup:IfConditionConverter.False>
                                            <Path
                                                Data="{StaticResource UnconnectedGeometry}"
                                                Fill="Red"
                                                Height="16"
                                                Margin="3,3,4,0"
                                                Stretch="Uniform"
                                                
                                                ToolTip.Tip="{markup:I18n {x:Static helper:LangKeys.Unconnected}}"
                                                VerticalAlignment="Center" />
                                        </markup:IfConditionConverter.False>
                                    </markup:IfConditionConverter>
                                </StackPanel.Resources>
                                <Button
                                    Classes="Basic Round"
                                    Command="{Binding CustomAdbCommand}"
                                    Height="16"
                                    IsEnabled="{Binding Idle, Source={x:Static helper:Instances.RootViewModel}}"
                                    IsVisible="{calcBinding:Binding 'CurrentController == maa:MaaControllerTypes.Adb'}"
                                    Margin="3,0,2,0"
                                    Padding="0"
                                    
                                    ToolTip.Tip="{markup:I18n {x:Static helper:LangKeys.Custom}}">
                                    <fluent:FluentIcon
                                        Height="18"
                                        Icon="DesktopEdit"
                                        IconSize="Size16"
                                        IconVariant="Regular" />
                                </Button>
                                <Button
                                    Classes="Basic Round"
                                    Command="{Binding RefreshCommand}"
                                    Height="17"
                                    IsEnabled="{Binding Idle, Source={x:Static helper:Instances.RootViewModel}}"
                                    Margin="3,0,3,0"
                                    Padding="0"
                                    
                                    ToolTip.Tip="{markup:I18n {x:Static helper:LangKeys.TooltipRefresh}}"
                                    VerticalAlignment="Center">
                                    
                                    <fluent:FluentIcon
                                        Height="18"
                                        Icon="ArrowSync"
                                        IconSize="Size16"
                                        IconVariant="Regular" />
                                </Button>

                                <ContentControl
                                    Content="{Binding IsConnected, Converter={StaticResource ConnectedConditionConverter}, Source={x:Static helper:Instances.TaskQueueViewModel}}" />
                            </StackPanel>
                        </Grid>
                    </suki:GroupBox.Header>
                    <WrapPanel HorizontalAlignment="Stretch" x:Name="connectionPanel">
                        <!--  左侧按钮组  -->
                        <WrapPanel HorizontalAlignment="Left" x:Name="Tab">
                            <RadioButton
                                Classes="GigaChips"
                                Content="{markup:I18n {x:Static helper:LangKeys.TabADB}}"
                                FontSize="12"
                                GroupName="Controller"
                                IsChecked="{Binding CurrentController, Converter={converters:UniversalEqualityConverter}, ConverterParameter={x:Static maa:MaaControllerTypes.Adb}, Mode=TwoWay}"
                                IsEnabled="{calcBinding:Binding '!LockController and Idle',
                                                                Source={x:Static helper:Instances.RootViewModel}}"
                                MinWidth="{Binding Bounds.Width, ElementName=SecondButton}"
                                Height="55"
                                VerticalContentAlignment="Center"
                                x:Name="FirstButton" />
                            <RadioButton
                                Classes="GigaChips"
                                Content="{markup:I18n {x:Static helper:LangKeys.TabWin32}}"
                                FontSize="12"
                                GroupName="Controller"
                                IsChecked="{Binding CurrentController, Converter={converters:UniversalEqualityConverter}, ConverterParameter={x:Static maa:MaaControllerTypes.Win32}, Mode=TwoWay}"
                                IsEnabled="{calcBinding:Binding '!LockController and Idle',
                                                                Source={x:Static helper:Instances.RootViewModel}}"
                                MinWidth="{Binding Bounds.Width, ElementName=FirstButton}"
                                Height="55"
                                VerticalContentAlignment="Center"
                                x:Name="SecondButton" />
                        </WrapPanel>
                        <DockPanel
                            HorizontalAlignment="Stretch"
                            LastChildFill="True"
                            Margin="5,0"
                            MinWidth="200">
                            <DockPanel.Width>
                                <MultiBinding Converter="{converters:DynamicWidthConverter}">
                                    <!--  父容器宽度  -->
                                    <Binding ElementName="connectionPanel" Path="Bounds.Width" />
                                    <!--  同级元素宽度  -->
                                    <Binding ElementName="Tab" Path="Bounds.Width" />
                                    <!--  自身最小宽度  -->
                                    <Binding Path="MinWidth" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </DockPanel.Width>
                            <TextBlock
                                FontSize="12"
                                Foreground="{DynamicResource SukiLowText}"
                                Grid.Column="0"
                                Text="{markup:I18n {x:Static helper:LangKeys.CurrentController}}"
                                VerticalAlignment="Center" />
                            <ComboBox ex:ComboBoxExtensions.DisableNavigationOnLostFocus="True"
                                      IsEnabled="{Binding Idle, Source={x:Static helper:Instances.RootViewModel}}"
                                      ItemsSource="{Binding Devices}"
                                      Margin="5,0,0,0"
                                      SelectedValue="{Binding CurrentDevice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBox.DataTemplates>
                                    <DataTemplate DataType="binding:AdbDeviceInfo">
                                        <TextBlock HorizontalAlignment="Left"
                                                   Text="{Binding Converter={converters:DeviceDisplayConverter}}" />
                                    </DataTemplate>

                                    <DataTemplate DataType="binding:DesktopWindowInfo">
                                        <TextBlock HorizontalAlignment="Left" Text="{Binding Name}" />
                                    </DataTemplate>
                                </ComboBox.DataTemplates>
                            </ComboBox>
                        </DockPanel>

                    </WrapPanel>
                </suki:GroupBox>
            </suki:GlassCard>
            <suki:GlassCard Grid.Row="1" Margin="0,8,15,25">
                <suki:GroupBox>
                    <suki:GroupBox.Header>
                        <Grid>
                            <TextBlock
                                FontSize="11"
                                FontWeight="Bold"
                                Foreground="{DynamicResource SukiLowText}"
                                HorizontalAlignment="Left"
                                Margin="2,0,0,0"
                                Text="{markup:I18n {x:Static helper:LangKeys.LogRecord}}"
                                VerticalAlignment="Center" />
                            <Button
                                Classes="Basic Round"
                                Command="{Binding ClearCommand}"
                                Height="17"
                                IsEnabled="{Binding Idle, Source={x:Static helper:Instances.RootViewModel}}"
                                Margin="3,0,3,0"
                                Padding="0"
                                HorizontalAlignment="Right"
                                ToolTip.Tip="{markup:I18n {x:Static helper:LangKeys.ButtonClear}}"
                                VerticalAlignment="Center">
                                    
                                <fluent:FluentIcon
                                    Height="18"
                                    Icon="ArrowSync"
                                    IconSize="Size16"
                                    IconVariant="Regular" />
                            </Button>
                        </Grid>
                      
                    </suki:GroupBox.Header>
                    <ScrollViewer
                        BorderBrush="LightGray"
                        BorderThickness="1"
                        ClipToBounds="False"
                        Margin="15,8,10,5"
                        VerticalAlignment="Top"
                        VerticalContentAlignment="Top"
                        ex:ScrollViewerExtensions.AutoScroll="True"
                        ex:ScrollViewerExtensions.PanningMode="VerticalOnly">
                        <ItemsControl ItemsSource="{Binding Path=LogItemViewModels}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            FontSize="12"
                                            Foreground="{DynamicResource SukiDisabledText}"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            Margin="0,5,2,0"
                                            MinWidth="55"
                                            Text="{Binding Time}"
                                            TextWrapping="Wrap"
                                            VerticalAlignment="Stretch" />
                                        <TextBlock
                                            FontSize="12"
                                            FontWeight="{Binding Weight}"
                                            Foreground="{Binding Color, Mode=TwoWay}"
                                            Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            Margin="0,5"
                                            Text="{Binding Content}"
                                            TextWrapping="Wrap"
                                            VerticalAlignment="Stretch" />
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </suki:GroupBox>
            </suki:GlassCard>
        </Grid>

    </Grid>
</UserControl>